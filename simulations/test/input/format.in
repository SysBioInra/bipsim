#
# List of formats. Elements provided by user are capitalized, keywords
# contain lower-case characters. Simulator checks for types at parsing:
# if a BOUND_CHEMICAL should be provided, then it expects the name of an
# entity defined by `BoundChemical NAME`. Often the names of the 
# elements to provide refer to entities whose format is described in
# another section.
#

#######################################################################
#                        SITE AND SWITCH FORMAT                       #
#######################################################################
#
# Binding sites:
#     BindingSite FAMILY_NAME LOCATION START STOP K_ON K_OFF READING_FRAME
#
# Switches for bound chemicals on specific SwitchSites:
#     Switch NAME INPUT_BOUND_CHEMICAL OUTPUT_BOUND_CHEMICAL
#     SwitchSite CHEMICAL_SEQUENCE POSITION SWITCH_NAME
#
#######################################################################


#######################################################################
#                            TABLE FORMAT                             #
#######################################################################
#
# Composition table (associates sequence letters with chemicals composing
# them, which will be released during degradation):
#     CompositionTable NAME LETTER_1 [CHEMICAL_]^N_1[, LETTER_i [CHEMICAL_i]^N_i]^M
#
# Loading table (associates templates with bases to load, e.g. codon
# to tRNA table):
#     LoadingTable NAME TEMPLATE_1 ELEMENT_TO_LOAD_1 LOADED_POLYMERASE_1 LOADING_RATE_1[, TEMPLATE_i ELEMENT_TO_LOAD_i LOADED_POLYMERASE_i LOADING_RATE_i]^N
#
# Transformation table (transforms a sequence into another, e.g. DNA to
# RNA transformation):
#     TransformationTable NAME INPUT_MOTIF_1 OUTPUT_MOTIF_1[, INPUT_MOTIF_i OUTPUT_MOTIF_i]^N
#
# Product table (stores product of template sequences)
#     ProductTable NAME TRANSFORMATION_TABLE
#
#######################################################################


#######################################################################
#                           CHEMICAL FORMAT                           #
#######################################################################
#
# Plain chemical:
#     FreeChemical NAME INITIAL_QUANTITY
#
# Single chemical sequence:
#     ChemicalSequence NAME sequence SEQUENCE INITIAL_QUANTITY
# or
#     ChemicalSequence NAME product_of PARENT START_POSITION END_POSITION PRODUCT_TABLE INITIAL_QUANTITY
#
# Chemicals bound to a sequence:
#     BoundChemical NAME
#
#######################################################################


#######################################################################
#                           REACTION FORMAT                           #
#######################################################################
#
# Plain chemical reaction:
#     ChemicalReaction [CHEMICAL STOICHIOMETRY]^N rates K_1 K_-1
#
# SequenceBinding (association of a chemical to a specific site of a sequence):
#     SequenceBinding FREECHEMICAL BOUND_FORM BINDING_SITE
#
# Loading (template-driven loading of a base by a polymerase)
#     ProductLoading LOADER LOADING_TABLE
#     DoubleStrandLoading LOADER LOADING_TABLE STALLED_LOADER
#
# Translocation along a sequence
#     Translocation BOUND_CHEMICAL FORM_AFTER_STEP STALLED_FORM STEP_SIZE RATE [TERMINATION_SITE_FAMILY]^N
#
# Release
#     Release BOUND_CHEMICAL SIDE_REACTION [produces PRODUCT_TABLE]
#
# Degradation
#     Degradation CHEMICAL_SEQUENCE COMPOSITION_TABLE RATE
#
#######################################################################


#######################################################################
#                              EVENT FORMAT                           #
#######################################################################
#
# An event should have the following format (one event per line):
# 
#   event TIME EVENT_TAG TARGET QUANTITY
# 
# where
#  - TIME is the time at which the event should occur
#  - EVENT_TAG is the type of event among
#     + ADD: add some molecules.
#     + REMOVE: remove some molecules if possible.
#     + SET: set the number of molecules.
#  - TARGET is the target chemical
#  - QUANTITY is the quantity to add/remove/etc.
#
# example:
#  event 100 ADD ATP 1000
# adds 1000 ATP molecules at time t=100.
#
#######################################################################
